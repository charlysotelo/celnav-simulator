const rawData = `
-01 43 42.7, -01 00 00.0
-01 35 27.2, -00 52 20.8
-01 27 31.1, -00 45 14.6
-01 19 47.0, -00 38 30.0
-01 10 00.0, -00 30 09.3
-00 52 04.0, -00 15 09.4
-00 24 24.5, +00 07 53.0
+00 00 00.0, +00 28 33.9
+00 50 00.0, +01 12 25.8
+01 10 00.0, +01 30 29.9
+01 54 41.2, +02 11 43.0
+03 09 16.7, +03 22 20.6
+04 14 33.7, +04 25 18.6
+06 31 34.3, +06 39 18.1
+08 34 30.3, +08 40 37.7 
+10 46 20.9, +10 51 19.6
+12 23 47.7, +12 28 09.4
+16 45 17.6, +16 48 32.3
+20 59 32.6, +21 02 06.7
+26 11 33.0, +26 13 33.9
+31 25 12.1, +31 26 49.8
+33 11 37.8, +33 13 09.1
+46 48 01.7, +46 48 58.0
+49 41 23.2, +49 42 14.2
+56 52 38.5, +56 53 17.7
+61 15 42.5, +61 16 15.4
+78 39 25.4, +78 39 37.5
`;

const parseAngle = (angle) => {
	const vals = angle.split(/\s+/).map((val, i) => {
		return Math.abs(Number(val))*Math.pow(60, -i);
	});
	const sum = vals.reduce((a, b) => a + b);
	const sign = angle.startsWith('-') ? -1 : 1;
	return sum*sign;
};

const stellariumValues = rawData.trim().split(/\s*\n\s*/).map((line) => {
	let [ y0, y1 ] = line.split(/\s*,\s*/).map((str) => {
		const angle = parseAngle(str)*(Math.PI/180);
		return Math.sin(angle);
	});
	return [ y0, y1 - y0 ];
});
